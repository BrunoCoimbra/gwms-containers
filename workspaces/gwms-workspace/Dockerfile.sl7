# SPDX-FileCopyrightText: 2020 Fermi Research Alliance, LLC
# SPDX-License-Identifier: Apache-2.0

# Selecting AlmaLinux 9 as the base OS
FROM fermilab/base-sl7:latest
ARG TARGETPLATFORM
ARG BUILDPLATFORM=amd64
ARG BUILD_VERSION=dev
ARG BUILD_REF
ARG BUILD_HASH
ARG BUILD_SHA
ARG BUILD_DATE
ARG GWMS_VERSION=latest
# MAINTAINER is deprecated but it is needed to set Author in the image attributes
MAINTAINER GlideinWMS Team <glideinwms@fnal.gov>
LABEL name="Base workspace with SL7, OSG 3.6 and base packages required by GlideinWMS and HEPCloud" \
      org.opencontainers.image.authors="GlideinWMS Team glideinwms@fnal.gov" \
      org.opencontainers.image.title="GWMS Base Workspace" \
      org.opencontainers.image.description="Base workspace with SL7, OSG 3.6 and base packages required by GlideinWMS and HEPCloud" \
      org.opencontainers.image.url="https://glideinwms.fnal.gov/" \
      org.opencontainers.image.documentation="https://glideinwms.fnal.gov/" \
      org.opencontainers.image.source="https://github.com/glideinWMS/containers/tree/main/workspaces" \
      org.opencontainers.image.vendor="The GlideinWMS Team" \
      org.opencontainers.image.licenses="Apache-2.0" \
      org.opencontainers.image.revision="$BUILD_HASH" \
      org.opencontainers.image.ref.name="$BUILD_REF" \
      org.opencontainers.image.created="$BUILD_DATE"\
      org.glideinwms.image.version="$GWMS_VERSION"

RUN echo "Building GWMS base dev image ($BUILD_SHA/$BUILD_DATE) on $BUILDPLATFORM, for $TARGETPLATFORM"

# Installing some base packages, the CRB repo, needed by swig, and the EPEL (epel-release) and OSG repos
# Not installing epel-next-release, consider it for the future
# Not installing the HTCondor Madison repo (getting condor from OSG). In case needed (x509 is in HTCSS 9.0.x from HTCondor)
#    /usr/bin/wget http://research.cs.wisc.edu/htcondor/yum/repo.d/htcondor-stable-rhel9.repo -O /etc/yum.repos.d/condor.repo ;\
#    /usr/bin/wget http://research.cs.wisc.edu/htcondor/yum/RPM-GPG-KEY-HTCondor -O /etc/pki/rpm-gpg/RPM-GPG-KEY-HTCondor ;\
#    echo "priority=90" >> /etc/yum.repos.d/condor.repo ;\
#    echo "exclude=*.i686" >> /etc/yum.repos.d/condor.repo ;\
#    echo "gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-HTCondor" >> /etc/yum.repos.d/condor.repo
#    echo "exclude=*condor*" >> /etc/yum.repos.d/osg.repo
# Assigning the epel repo prio of 99 to make sure it is after the OSG one (98 by default)
# Installing wget to help with repo setup
# ? epel-re 
# ?   sed -i "s/priority=90/priority=99/" /etc/yum.repos.d/epel.repo && \
# ? 

# EPEL, OSG 3.6, wget, sed (from sl7), and yum-priorities are provided in base-sl7
# Installing and disabling SELinux (required by HTCondor). setenforce may return 1 if already disabled
RUN yum install -y git selinux-policy-targeted selinux-policy-devel policycoreutils && \
    setenforce 0 ; sed -i "s/SELINUX=enforcing/SELINUX=permissive/" /etc/sysconfig/selinux
    # SL7 build is only for x86_64 - Add sed if this changes
    # sed -i 's/\$basearch/x86_64/g' /etc/yum.repos.d/osg*
    # TODO: remove the sed command above when OSG supports aarch64

# Installing some system management RPMs/sw needed for containers (these are not needed for VMs)
RUN yum install -y cronie supervisor initscripts ;\
    /usr/bin/wget https://raw.githubusercontent.com/gdraheim/docker-systemctl-replacement/master/files/docker/systemctl3.py -O /usr/local/bin/systemctl ;\
    /usr/bin/chmod +x /usr/local/bin/systemctl

# Installing some base RPMs (gettext is needed by RELEASE, swig and many devel by jsonnet)
# Install development tools
# May have to add --nogpgcheck if gh is giving problems
COPY gwms-workspace/config/gh.repo /etc/yum.repos.d/gh.repo
#? RUN dnf config-manager --add-repo https://cli.github.com/packages/rpm/gh-cli.repo && \
RUN yum install -y python36 python36-devel python36-cryptography python36-wheel make openssl-devel gcc gcc-c++ rpm-build gettext swig \
    jq vim zsh sudo psmisc bind-utils mlocate ;\
    yum install -y --nogpgcheck gh ;\
    pip3 install debugpy ; echo "debugpy installed: $?"

# Packages useful for development and administration
# Common packages for all GlideinWMS/HEPCloud software (used to have --disablerepo=slf-primary for rrdtool, not needed)
# Installing HTCondor from OSG
RUN yum -y install apptainer htgettoken osg-ca-certs python3-rrdtool condor ;\
    /usr/bin/wget -O ~/.bash_aliases https://raw.githubusercontent.com/glideinWMS/dev-tools/master/.bash_aliases

# Should CRLs (.r0) be removed?
#    && rm -f /etc/grid-security/certificates/*.r0

# When using multiple architectures, HTCondor needs its installer not in the OSG repo (remove condor from above)
#RUN curl -fsSL https://get.htcondor.org | /bin/bash -s -- --no-dry-run

# Postponing dnf/yum/pip cleaning to later, to leave caches for next steps
# This must be after all dnf/yum and pip commands
# Cleaning YUM and DNF all caches (including disabled repos) and pip caches to reduce size of image
# RUN rm -rf /var/cache/yum/* /var/cache/dnf/* /root/.cache/pip/*

# Adding unprivileged user
RUN adduser abc ;\
    mkdir /home/abc/repos && \
    chown abc: /home/abc/repos ;\
    mkdir /opt/abc && \
    chown abc: /opt/abc

# Deploy secrets
COPY gwms-workspace/secrets /opt/localgwms/secrets


# Should ssh be enabled/installed?
# SSH config needs to be added
#ADD shared/ssh_config /etc/ssh/ssh_config

# GWMS and OSG suggested mount points
RUN mkdir -p /opt/gwms ; \
    for MNTPOINT in \
        /cvmfs \
        /hadoop \
        /hdfs \
        /lizard \
        /mnt/hadoop \
        /mnt/hdfs \
        /xenon \
        /scratch \
        /spt \
        /stash2 \
    ; do \
        mkdir -p $MNTPOINT ; \
    done

# Default entry point
CMD ["/bin/bash"]

# Optional health check (startup will add health check after setup completes)
#HEALTHCHECK --interval=5m CMD [ ! -f /healthcheck.sh ] && exit 0 || ./healthcheck.sh

# build info
RUN echo "Source: fermilab/gwms-workspace" > /image-source-info.txt
RUN echo "Timestamp: $(date -u +'%Y-%m-%dT%H:%M:%SZ')" | tee /image-build-info.txt
